
  Location loc3 = Config.getLocation("SetSandStone1");
    Location loc4 = Config.getLocation("SetSandStone11");
    
    assert loc4 != null;
    assert loc3 != null;
    int minX2 = Math.min(loc3.getBlockX(), loc4.getBlockX());
    int minY2 = Math.min(loc3.getBlockY(), loc4.getBlockY());
    int minZ2 = Math.min(loc3.getBlockZ(), loc4.getBlockZ());
    int maxX2 = Math.max(loc3.getBlockX(), loc4.getBlockX());
    int maxY2 = Math.max(loc3.getBlockY(), loc4.getBlockY());
    int maxZ2 = Math.max(loc3.getBlockZ(), loc4.getBlockZ());
    
    
    for (int x2 = minX2; x2 <= maxX2; x2++) {
    for (int y2 = minY2; y2 <= 2; y2++) {
    for (int z2 = minZ2; z2 <= maxZ2; z2++) {
    Location currentLocation = new Location(Bukkit.getWorld("world"), x2, y2, z2);
    
    
    Block block = currentLocation.getBlock();
    MaterialData materialData;
    
    if (block.getType() == Material.SANDSTONE) {
    Sandstone sandstone = (Sandstone) block.getState().getData();
    sandstone.setType(SandstoneType.SMOOTH);
    materialData = sandstone;
    block.getState().setData(materialData);
    block.getState().update();
  
  }
    
    // Changer le bloc en obsidienne
  CommandDebug.debugSend("BlockReplaced: ", String.valueOf(currentLocation));
                }
            }
        }

        Location loc5 = Config.getLocation("SetSandStone2");
    Location loc6 = Config.getLocation("SetSandStone22");
    
    assert loc5 != null;
    assert loc6 != null;
    int minX3 = Math.min(loc5.getBlockX(), loc6.getBlockX());
    int minY3 = Math.min(loc5.getBlockY(), loc6.getBlockY());
    int minZ3 = Math.min(loc5.getBlockZ(), loc6.getBlockZ());
    int maxX3 = Math.max(loc5.getBlockX(), loc6.getBlockX());
    int maxY3 = Math.max(loc5.getBlockY(), loc6.getBlockY());
    int maxZ3 = Math.max(loc5.getBlockZ(), loc6.getBlockZ());
    
    
    for (int x3 = minX3; x3 <= maxX3; x3++) {
    for (int y3 = minY3; y3 <= 2; y3++) {
    for (int z3 = minZ3; z3 <= maxZ2; z3++) {
    Location currentLocation = new Location(Bukkit.getWorld("world"), x3, y3, z3);
    
    
    Block block = currentLocation.getBlock();
    MaterialData materialData;
    
    if (block.getType() == Material.SANDSTONE) {
    Sandstone sandstone = (Sandstone) block.getState().getData();
    sandstone.setType(SandstoneType.SMOOTH);
    materialData = sandstone;
    block.getState().setData(materialData);
    block.getState().update();

  }

    // Changer le bloc en obsidienne
  CommandDebug.debugSend("BlockReplaced: ", String.valueOf(currentLocation));
  }
  }
  }